// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using CoreGraphics;
using Foundation;
using GrawApp.Controller;
using UIKit;

namespace GrawApp
{
	public partial class ChartPageViewController : UIPageViewController
	{
        PageDataSource PageSource;
        public UIPageControl PageControl { get; set; }
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            EdgesForExtendedLayout = UIRectEdge.None;
            this.DidFinishAnimating += (sender, e) => {
                if (e.Completed)
                {
                    var value = e.PreviousViewControllers[0].RestorationIdentifier;
                    Console.WriteLine($"{value}");
                    if (!string.IsNullOrEmpty(value))
                    {
                        var index = PageSource.ViewControllerIdentifiers.IndexOf(value);
                        //PageControl.CurrentPage = index;
                    }
                }
            };
            NavigationController.InteractivePopGestureRecognizer.Enabled = false;
            PageSource = new PageDataSource();
            PageControl = new UIPageControl();

            //PageSource.PageControl = PageControl;
            PageSource.ViewController = this;
            this.DataSource = PageSource;


            ConfigurePages();
            var controller = PageSource.GetViewControllerByIndex(0);
             
            SetViewControllers(new UIViewController[] { controller }, UIPageViewControllerNavigationDirection.Forward,
                                true,null);
        }

       
		public ChartPageViewController (IntPtr handle) : base (handle)
		{
		}


        public void ConfigurePages()
        {
            PageControl = new UIPageControl(new CGRect(0,
                                                       this.View.Bounds.GetMinX(),
                                                       UIScreen.MainScreen.Bounds.Width, height: 50));
            PageControl.Pages = PageSource.ViewControllerIdentifiers.Count;
            PageControl.CurrentPage = 0;
            PageControl.Enabled = true;
            PageControl.TintColor = UIColor.Black;
            PageControl.PageIndicatorTintColor = UIColor.LightGray;
            PageControl.CurrentPageIndicatorTintColor = UIColor.Black;
            this.View.AddSubview(PageControl);
        }
	}

    public class PageDataSource:UIPageViewControllerDataSource
    {

        public List<string> ViewControllerIdentifiers { get; set; } = new List<string> { "ProfileTimeChart", "ProfileAltitudeChart", "PressureTemperatureChart" };
        //public UIPageControl PageControl { get; set; }

        public ChartPageViewController ViewController { get; set; }

        int PreviousIndex = 0;

        public override UIViewController GetNextViewController(UIPageViewController pageViewController, UIViewController referenceViewController)
        {
            var pageContent = referenceViewController as ChartBaseViewController;

            Console.WriteLine($"Next Page -- {pageContent.RestorationIdentifier}");
            if (pageContent == null)
            {
                return null;
            }
            var index = ViewControllerIdentifiers.IndexOf(pageContent.RestorationIdentifier);
            Console.WriteLine($"Next Page -- Index:{index}");
            ViewController.PageControl.CurrentPage = index;
            if (index >= ViewControllerIdentifiers.Count-1)
            {
                return null;
            }

            index++;
            return GetViewControllerByIndex(index);
        }

        public override UIViewController GetPreviousViewController(UIPageViewController pageViewController, UIViewController referenceViewController)
        {
            var pageContent = referenceViewController as ChartBaseViewController;
            Console.WriteLine($"Previuous Page -- {pageContent.RestorationIdentifier}");
            if(pageContent == null)
            {
                return null;
            }
            var index = ViewControllerIdentifiers.IndexOf(pageContent.RestorationIdentifier);
            ViewController.PageControl.CurrentPage = index;
            Console.WriteLine($"Previuous Page -- Index:{index}");
            //var indexCheck = viewControllerIdentifiers.IndexOf();

            if (index <= 0)
            {
                return null;
            }
           
            index--;
            return GetViewControllerByIndex(index);
        }



       

       

        public UIViewController GetViewControllerByIndex(int index)
        {

            var storyboard = UIStoryboard.FromName("Main", null);
            var nc = storyboard.InstantiateViewController(ViewControllerIdentifiers[index]) as ChartBaseViewController;
            nc.Index = index;
            return nc;
        
    }
    }
}
